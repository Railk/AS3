package railk.as3.physics{	public class Flocker extends Mass	{		// Max and min force values.		internal var _maxForce:Number = 5;		internal var _minForce:Number = 0;				public function Flocker($x:Number = 0, $y:Number = 0):void{			// Construct superclass with required arguments.			super($x, $y);		}				// Accessors for _minForce and _maxForce.		public function get maxForce(){			return _maxForce;		}		public function set maxForce($maxForce:Number){			_maxForce = $maxForce;		}		public function get minForce(){			return _minForce;		}		public function set minForce($minForce:Number){			_minForce = $minForce;		}				override public function update():void {			// Ramp up force.			if(force.length < _maxForce) force.normalize(force.length * 1.01);			// Maintai maximum speed.			if(force.length > _maxForce) force.normalize(_maxForce);			// Maintain a minimum speed.			if(force.length < _minForce) force.normalize(_minForce);						// Update position with inherited method.			super.update();		}			}}